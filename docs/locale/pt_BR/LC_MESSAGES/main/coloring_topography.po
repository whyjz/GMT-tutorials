# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Python\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-26 21:56+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "為地形圖上色"
msgstr ""

msgid "本教學適用於 GMT 6 的現代模式。如須參閱 GMT 6 (傳統模式) 與 GMT 4-5 繪製相同地圖的教程，\\ `請至這裡 <coloring_topography_gmt5.html>`_。"
msgstr ""

msgid "把地圖依照不同屬性、在不同區域著色，可以把龐大的資料有效視覺化。最常用來著色的屬性，高度絕對是其中之一。在典型的地形圖中，不同的海拔高度會套上不同的顏色。本章中將會詳細說明如何利用地表的不同高度，製作彩色的地形圖。"
msgstr ""

msgid "目標"
msgstr ""

msgid "製作一張\\ `的的喀喀湖`_ (Lago Titicaca) 的分層設色地形圖，如下圖所示。的的喀喀湖位於秘魯和玻利維亞交界，面積達 8372 平方公里。特殊的是，湖面位置的海拔高達 3812 公尺，是全世界最高的商業通航湖泊\\ [#]_。圖中的藍色線條表示河流，注意右側的河流其實是亞馬遜河的源頭，而且並沒有和的的喀喀湖連接。黑色的虛線是兩國國界。地形圖的顏色從海拔 0 至 5000 公尺，依循以下顏色過渡：綠色 -> 黃色 -> 紅色 -> 灰色 -> 白色，其中 2800 公尺以上即開始以灰色系展示。這麼高的湖泊，位於一片白色系背景當中，更增添了些許雪國的氣氛 (實際上，的的喀喀湖冬天非常乾燥，幾乎不會下雪\\ [#]_)。"
msgstr ""

msgid "直接觀看\\ `指令稿`_"
msgstr ""

msgid "使用的指令與概念"
msgstr ""

msgid "``grdinfo`` - **查閱網格檔的基本資訊**"
msgstr ""

msgid "``grdimage`` - **繪製著色影像**"
msgstr ""

msgid "``coast`` - **繪製河流、湖泊與國界**"
msgstr ""

msgid "使用 GMT 伺服器的地形資料繪圖"
msgstr ""

msgid "從 `cpt-city`_ 尋找適合地圖的色階檔"
msgstr ""

msgid "如何疊加輸出圖層"
msgstr ""

msgid "使用腳本、``gmt begin`` 和 ``gmt end``，一次下達所有繪圖指令"
msgstr ""

msgid "取得資料"
msgstr ""

msgid "這次我們必須要先取得繪圖區域的地形資料。GMT 6 本身有提供全球的地形資料，不過是放在遠端伺服器上，當使用者需要時才會下載到本機電腦中。這些地形資料的檔名為："
msgstr ""

msgid "@earth_relief_rru"
msgstr ""

msgid "其中 ``rr`` 是解析度的大小，而 ``u`` 是單位 (有度 ``d``、分 ``m``、秒 ``s`` 可選)。我們在這邊要使用的是全球解析度 1 弧分的地形高程，因此檔名為 ``@earth_relief_01m``。其他可供選擇的資料，皆在 `GMT 官方手冊中有說明 <https://docs.generic-mapping-tools.org/latest/datasets/earth_relief.html>`_。如果你想查閱地形資料的更多資訊，可以透過終端機輸入 ``grdinfo`` 指令來達成。執行畫面會像如下所示："
msgstr ""

msgid "$ gmt grdinfo @earth_relief_01m\n"
"earth_relief_01m: Download file from the GMT data server [data set size is 214M].\n"
"earth_relief_01m: Earth Relief at 1x1 arc minutes obtained by Gaussian Cartesian filtering (1.9 km fullwidth) of SRTM15+V2 [Tozer et al., 2019].\n"
"\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: Title: Earth Relief at 01 arc minute\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: Command: grdfilter SRTM15+V2.nc -Fg1.9 -D1 -I01m -rg -Gearth_relief_01m.grd=ns --IO_NC4_DEFLATION_LEVEL=9 --PROJ_ELLIPSOID=Sphere\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: Remark: Obtained by Gaussian Cartesian filtering (1.9 km fullwidth) from SRTM15+V2.nc [Tozer et al., 2019; http://dx.doi.org/10.1029/2019EA000658]\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: Gridline node registration used [Geographic grid]\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: Grid file format: ns = GMT netCDF format (16-bit integer), CF-1.7\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: x_min: -180 x_max: 180 x_inc: 0.0166666666667 (1 min) name: longitude n_columns: 21601\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: y_min: -90 y_max: 90 y_inc: 0.0166666666667 (1 min) name: latitude n_rows: 10801\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: z_min: -10907 z_max: 8170 name: elevation (m)\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: scale_factor: 1 add_offset: 0\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: format: netCDF-4 chunk_size: 129,129 shuffle: on deflation_level: 9"
msgstr ""

msgid "訊息的前兩行在有需要下載時才會出現。下載下來的檔案預設是放在 ``~/.gmt/server/`` 這個位置，之後 GMT 會先查看這個位置有沒有已經下載的檔案，如果沒有的話才會再次下載。下載檔檔名為 ``earth_relief_01m.grd``，副檔名 ``.grd`` 表明了它是某種「網格檔 (grid)」，亦即地球的二維表面被切割成網格狀，每個「格子」內，都有一個相對應的高度數據。(非常類似 GeoTiff 的概念，只不過在 GeoTiff 中，相對應的術語稱為「像素」而非「網格點」。) ``.grd`` 檔是 netCDF 格式常見的附檔名，也就是說它可被 GMT 讀取並作圖。另外，從 ``grdinfo`` 的輸出中你還可以看到其他的基本資訊，像是"
msgstr ""

msgid "網格檔是從 `SRTM15+V2 <https://topex.ucsd.edu/WWW_html/srtm15_plus.html>`_ 這個資料庫重新取樣而來。"
msgstr ""

msgid "X 從 -180 度到 180 度，Y 從 -90 度到 90 度，意味著此網格檔涵蓋全球的範圍。"
msgstr ""

msgid "網格大小是 0.0166666666667，也就是 1/60 度 (1 弧分)。"
msgstr ""

msgid "總共有 21601 x 10801 = 233312401 個格點 (也就是兩億三千三百萬像素)。"
msgstr ""

msgid "Z 值 (高度) 從 -10907 到 8170 公尺。為什麼最高的地方不是 8848 公尺 (聖母峰的高度)? 那是因為網格的解析度還是不夠高，1 弧分其實只相當於 1 至 2 公里才取一個點而已。"
msgstr ""

msgid "操作流程"
msgstr ""

msgid "從本章開始，我們需要使用兩個以上的 GMT 指令製作地圖。在上一章介紹過的 ``coast`` 用來畫向量式資料 (河流、湖泊以及國界)，而在本章中新介紹的 ``grdimage`` 則用來畫地形起伏。因為上一章介紹的 ``-png`` 選項只適用於單一指令，所以在本章我們要用另一種更通用的方式指定輸出檔。具體做法是使用 ``gmt begin`` 和 ``gmt end`` 這兩個關鍵字串把其他所有繪圖指令包起來，像這樣："
msgstr ""

msgid "$ gmt begin [輸出地圖主檔名，不用加附檔名] [格式]      # 輸入後按下 enter\n"
"$ [繪圖指令1]    # 輸入後按下 enter\n"
"$ [繪圖指令2]    # 輸入後按下 enter\n"
"...\n"
"$ gmt end"
msgstr ""

msgid "你可以一行一行的在命令列中打好指令再送出執行，不過為了修改方便，我們通常會選擇把所有的指令先寫在\\ :ref:`腳本 <腳本>`\\ 內，再執行此腳本以一次送出所有指令給電腦。在本章中，我們就要來介紹這種更爲便捷的方式。"
msgstr ""

msgid "畫地圖的第一步就是決定繪製區域。如同前一章「\\ :doc:`making_first_map`\\ 」所述，我們可以使用 *Google Map* 等工具決定區域。這裡我們考慮到高度的呈現效果，選擇經度從 -70.8 到 -66.56 (負值表示西經)，緯度從 -17.17 到 -14.42 (負值表示南緯。)"
msgstr ""

msgid "本次作圖區域在 `Google Map` 上呈現的樣子。"
msgstr ""

msgid "使用 ``grdimage`` 呈現地形數據，最少需要提供兩個參數，分別是 ``輸入檔`` 和 ``-J`` (投影方法和地圖大小)。在這裡我們也需要使用 ``-R`` 指定繪製區域，如果不加 ``-R`` 的話，GMT 會把全網格檔的資料話在地圖上 (因爲我們使用的是全球地形資料，所以輸出會是全球地圖)。就讓我們來畫一張跟\\ `前一章 <making_first_map.html>`_\\ 一樣寬度的地圖吧。請建立新文字檔，檔名可以為 ``titicaca.bash`` 或任何你喜歡、且符合作業系統格式慣例的名字。然後在檔案中輸入："
msgstr ""

msgid "gmt begin titicaca png\n"
"    gmt grdimage @earth_relief_01m -R-70.8/-17.17/-66.56/-14.42r -JM6i\n"
"gmt end"
msgstr ""

msgid "你會注意到我們在 ``gmt grdimage`` 前面多加了四個空格，這純粹只是製造縮排效果，讓閱讀腳本的人知道這行被包在 ``gmt begin`` 和 ``gmt end`` 之間，增加腳本的可讀性。縮排與否和空格數量不會影響腳本的執行。如需 ``-R`` 與 ``-J`` 選項的語法說明，請至「\\ :doc:`making_first_map`\\ 」中查閱。存檔後，在\\ :ref:`終端機`\\ 模式下前往 ``titicaca.bash`` 所在的資料夾，然後執行腳本 (以 Linux 系統爲例)："
msgstr ""

msgid "$ bash titicaca.bash"
msgstr ""

msgid "不同的作業系統的腳本會有不同的額外設定，可以讓你的腳本能夠更方便的執行，詳情請參閱「\\ :doc:`basic_concept`\\」。"
msgstr ""

msgid "輸出的圖檔 ``titicaca.png`` 開啟後應該會是如下的圖案："
msgstr ""

msgid "有點難以看懂？這是因為 GMT 預設的套色沒那麼適合這個地區的緣故。在未指定地圖的套色下繪製 ``@earth_relief`` 地形資料時，GMT 會用一套名為 ``geo`` 的色階來呈色。這個色階的顏色如下所示"
msgstr ""

msgid "圖中的 ``0`` 和 ``1`` 的顏色，也就是深藍色和白色，會對應到地圖範圍中最低和最高的的地方。有沒有辦法換成另一種比較好看的色階？當然可以，GMT 有數種方法可以製造或調整色階，但這邊我們要先來看一種最簡單的方法：直接下載已經做好的色階來用。"
msgstr ""

msgid "`cpt-city`_ 網站蒐集了不少常用的色階，其中也包括 GMT 格式的色階檔。GMT 色階檔通常使用副檔名 ``.cpt``，是 color palette table (色階表) 的縮寫。你可以在網站中搜尋你想要的色階，例如\\ `這個網頁 <http://soliton.vm.bytemark.co.uk/pub/cpt-city/views/totp-cpt.html>`_\\ 就列了許多最常被下載的 ``.cpt`` 檔。我們這次來用其中的一個叫做 ``mby`` 的色階看看。按下 ``mby`` 的色階表，你應該就會看到如下頁面"
msgstr ""

msgid "注意圖中的 **-8000 ... 5000**，這是指此色階已經被指定在 -8000 到 5000 公尺之內呈現了。按一下網頁上的 `cpt` 連結就可以把此色階檔下載下來。"
msgstr ""

msgid "為了方便起見，\\ :download:`這邊 <coloring_topography/mby.cpt>`\\ 也提供了 ``mby.cpt`` 的下載點。"
msgstr ""

msgid "使用 ``grdimage`` 中的 ``-C`` 選項，就可以指定要用的色階，只要在 ``-C`` 後接續色階檔檔名就行了。所以我們更新版的腳本為："
msgstr ""

msgid "gmt begin titicaca png\n"
"    gmt grdimage @earth_relief_01m -R-70.8/-17.17/-66.56/-14.42r -JM6i -Cmby.cpt\n"
"gmt end"
msgstr ""

msgid "使用相同的方式再執行一次腳本，這次地圖會變成這樣"
msgstr ""

msgid "看起來已經有模有樣了。"
msgstr ""

msgid "有關於如何自訂色階表，讓地圖的顏色可以隨心所欲變化的技巧，請參閱「\\ :doc:`pen_and_painting`\\ 」與「\\ :doc:`editing_cpt_colorbar`\\ 」。"
msgstr ""

msgid "這個地圖目前有個大問題，就是我們雖然知道地圖中大部份的區域都很高 (灰白色)，但是卻看不到我們的主角\\ `的的喀喀湖`_。這是因為地形資料只有記載高度，並沒有記載地表的狀態，所以光靠 ``grdimage`` 是無從得知哪邊是湖泊、海洋等等地貌的。因此，為了標上\\ `的的喀喀湖`_\\ 的位置，我們需要呼叫 ``coast`` 這個指令，利用內建的水體資料幫我們畫上湖泊，順便再畫上邊框。"
msgstr ""

msgid "當一張地圖包含兩個以上的作圖指令時，\\ **越上方的圖層要越後畫**。由於我們希望 ``coast`` 畫的湖泊水體疊加在 ``grdimage`` 畫的地形資料上，所以 ``coast`` 指令要排在 ``grdimage`` 之後。再次打開腳本，把內容修改爲："
msgstr ""

msgid "gmt begin titicaca png\n"
"    gmt grdimage @earth_relief_01m -R-70.8/-17.17/-66.56/-14.42r -JM6i -Cmby.cpt\n"
"    gmt coast -Scornflowerblue -Baf -B+t\"Lago Titicaca\"\n"
"gmt end"
msgstr ""

msgid "關於 ``coast`` 的指令解說，請至「\\ :doc:`making_first_map`\\ 」查看。另外，你或許會發現在 ``coast`` 中，沒有 ``-R`` 和 ``-J`` 選項。\\ **當不指定這些選項時，GMT 會自動沿用上次的設定**，也就是 ``grdimage`` 的 ``-R`` 與 ``-J`` 資訊，省下重複輸入相同內容的麻煩。"
msgstr ""

msgid "``coast`` 的 ``-S`` 選項會套用在所有水域。如果你的地圖中有海又有湖，而你想分別為海跟湖指定不同顏色，可以試試看換成 ``-C`` 選項。因為本圖沒有海域，``-Scornflowerblue`` 和 ``-Cl/cornflowerblue`` 具有相同效果，不過後者其實只會為湖泊填上顏色。"
msgstr ""

msgid "讓我們看一下 ``coast`` 中的兩個 ``-B`` 選項。實際上它們也可以加在 ``grdimage`` 中，因為邊框屬於哪個圖層在本例中不影響地圖疊加，所以效果會一模一樣。"
msgstr ""

msgid "在終端機中執行腳本，然後開啟輸出檔，應該會看到下圖："
msgstr ""

msgid "這次總算有個令人滿意的輸出結果。接下來，我們還可以利用 ``coast`` 的其餘功能來美化這張地圖。首先是 ``-I``，它可以幫我們標上河流，語法為"
msgstr ""

msgid "-I編號/畫筆"
msgstr ""

msgid "其中的\\ ``編號``\\ 可以為不同的英數字，對應到不同等級的河流；而\\ :ref:`畫筆 <畫筆>`\\ 則用來指定河流的繪圖樣式。這裡我們要使用 ``r`` 這個編號，它對應的是\\ **所有的永久河流**。畫筆樣式則使用 ``0.7p,cornflowerblue``。"
msgstr ""

msgid "另外一個 ``coast`` 的選項是 ``-N``，它可以在地圖上標上政治性的邊界。語法同樣為"
msgstr ""

msgid "-N編號/畫筆"
msgstr ""

msgid "這裡的\\ ``編號``\\ 一樣可以為不同的英數字，對應到不同等級政治邊界 (國界、州界等)。我們要用的是 ``1``，亦即\\ **標上國界**。至於畫筆樣式，則使用 ``0.7p,,--``，注意這裡我們空下了「顏色」的欄位，因此 GMT 會使用預設值「黑色」進行繪圖。在「線條樣式」欄位中，我們選擇 ``--``，這樣國界就會以虛線呈現。"
msgstr ""

msgid "有關畫筆的進階樣式設定，例如設定線條樣式、利用 RGB 值自訂顏色等，會在「\\ :doc:`pen_and_painting`\\ 」詳加描述。"
msgstr ""

msgid "把 ``-N`` 和 ``-I`` 以及他們的設定參數加入我們的 ``coast`` 指令中，就完成了這次的地圖設計。"
msgstr ""

msgid "指令稿"
msgstr ""

msgid "本地圖的最終指令稿如下："
msgstr ""

msgid "gmt begin titicaca png\n"
"    gmt grdimage @earth_relief_01m -R-70.8/-17.17/-66.56/-14.42r -JM6i -Cmby.cpt\n"
"    gmt coast -Ir/0.7p,cornflowerblue -N1/0.7p,,-- -Scornflowerblue -Baf -B+t\"Lago Titicaca\"\n"
"gmt end"
msgstr ""

msgid "「繪製地形設色圖：以 **70.8E - 66.56E，17.17S - 14.42S** 為邊界，麥卡托投影，地圖橫向寬 **6** 吋，套色使用 ``mby.cpt`` 內的色階表。使用 ``cornflowerblue`` 把湖泊和河流上色，畫上國界，四邊繪製邊框與刻度數值，自動選擇數值間隔與刻度間隔，不畫格線，標題為 *Lago Titicaca*，存檔為 ``titicaca.png``。」"
msgstr ""

msgid "觀看\\ `最終版地圖`_"
msgstr ""

msgid "PyGMT 指令稿"
msgstr ""

msgid "使用 PyGMT，可以如下腳本繪製本地圖："
msgstr ""

msgid "import pygmt\n"
"\n"
"# 取得地形資料\n"
"region = [-70.8, -66.56, -17.17, -14.42]\n"
"grid = pygmt.datasets.load_earth_relief(resolution='01m', region=region)\n"
"\n"
"# 繪圖\n"
"fig = pygmt.Figure()\n"
"fig.grdimage(grid, region=region, projection='M6i', cmap='mby.cpt')\n"
"fig.coast(rivers='r/0.7p,cornflowerblue', borders='1/0.7p,,--', water='cornflowerblue', frame=['af', '+t\"Lago Titicaca\"'])\n"
"fig.show()\n"
"fig.savefig('titicaca_pygmt.png')"
msgstr ""

msgid "你可以使用以下的 Binder 連結嘗試此程式碼："
msgstr ""

msgid "習題"
msgstr ""

msgid "畫出貝加爾湖 (*Lake Baikal* 或 *Baygal nuur*) 與週邊區域的地形設色圖。貝加爾湖是全世界最深的湖泊，也是世界第七大湖，位於俄羅斯，南端接近蒙古的邊界。"
msgstr ""

msgid "從地圖中可看到有幾條河流注入或流出貝加爾湖？"
msgstr ""

msgid "貝加爾湖週邊的海拔為何？湖底的海拔為何？你的地圖分別用什麼顏色表示這兩個海拔？"
msgstr ""

msgid "`Data Summary: Lago Titicaca (Lake Titicaca). <http://www.ilec.or.jp/database/sam/dsam04.html>`_ International Lake Environment Committee Foundation - ILEC. Retrieved 2009-01-03."
msgstr ""

msgid "`ClClimatological Information for Juliaca, Peru. <http://www.weather.gov.hk/wxinfo/climat/world/eng/s_america/ec_per/juliaca_e.htm>`_ Hong Kong Observatory."
msgstr ""
